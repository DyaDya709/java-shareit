-- drop table if exists bookings;
-- drop table if exists comments;
-- drop table if exists items;
-- drop table if exists users;


create table if not exists users
(
    id    bigint generated by default as identity
        primary key,
    email varchar(100)
        unique,
    name  varchar(100)
);

create table if not exists items
(
    id          bigint generated by default as identity
        primary key,
    user_id     bigint
        constraint items_users_id_fk
            references users,
    name        varchar(100),
    description varchar(255),
    available   boolean default true
);

create index if not exists items_user_id_index
    on items (user_id);

create index if not exists items_description_index
    on items (description);

create index if not exists items_name_index
    on items (name);

create table if not exists bookings
(
    id         bigint generated by default as identity
        primary key,
    item_id    bigint
        constraint bookings_items_id_fk
            references items,
    user_id    bigint
        constraint bookings_users_id_fk
            references users,
    start_date timestamp,
    end_date   timestamp,
    status     varchar(20)
);

create index if not exists bookings_user_id_index
    on bookings (user_id);

create index if not exists bookings_status_index
    on bookings (status);

create index if not exists bookings_start_date_index
    on bookings (start_date);

create index if not exists bookings_end_date_index
    on bookings (end_date);

create index if not exists bookings_item_id_index
    on bookings (item_id);

create table if not exists comments
(
    id      bigint generated by default as identity
        primary key,
    user_id bigint
        constraint comments_users_id_fk
            references users,
    text    varchar(500),
    item_id bigint
        constraint comments_items_id_fk
            references items,
    created timestamp
);

create table if not exists item_requests
(
    description varchar(500) not null,
    created     timestamp,
    user_id     bigint
        constraint item_requests_users_id_fk
            references users,
    id          bigint generated by default as identity
        constraint item_requests_pk
            primary key
);

create table if not exists item_responses
(
    id         bigint generated by default as identity
        constraint item_response_pk
            primary key,
    item_id    bigint
        constraint item_response_items_id_fk
            references items,
    request_id bigint
        constraint item_responses_item_requests_id_fk
            references item_requests
);


delete from bookings;
delete from comments;
delete from items;
DELETE FROM users;
delete from item_requests;
delete from item_responses;

ALTER TABLE bookings ALTER COLUMN id RESTART WITH 1;
ALTER TABLE comments ALTER COLUMN id RESTART WITH 1;
ALTER TABLE items ALTER COLUMN id RESTART WITH 1;
ALTER TABLE users ALTER COLUMN id RESTART WITH 1;
ALTER TABLE item_requests ALTER COLUMN id RESTART WITH 1;
ALTER TABLE item_responses ALTER COLUMN id RESTART WITH 1;
